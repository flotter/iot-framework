# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Collection offset is used to shift the collection by the given amount.
  ## This can be be used to avoid many plugins querying constraint devices
  ## at the same time by manually scheduling them in time.
  # collection_offset = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Collected metrics are rounded to the precision specified. Precision is
  ## specified as an interval with an integer + unit (e.g. 0s, 10ms, 2us, 4s).
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  ##
  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s:
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ##
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  precision = "0s"

  ## Log at debug level.
  debug = true
  ## Log only error level messages.
  # quiet = false

  ## Log target controls the destination for logs and can be one of "file",
  ## "stderr" or, on Windows, "eventlog".  When set to "file", the output file
  ## is determined by the "logfile" setting.
  # logtarget = "file"

  ## Name of the file to be logged to when using the "file" logtarget.  If set to
  ## the empty string then logs are written to stderr.
  # logfile = ""

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0h"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5

  ## Pick a timezone to use when logging or type 'local' for local time.
  ## Example: America/Chicago
  # log_with_timezone = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = true

  ## Method of translating SNMP objects. Can be "netsnmp" which
  ## translates by calling external programs snmptranslate and snmptable,
  ## or "gosmi" which translates using the built-in gosmi library.
  # snmp_translator = "netsnmp"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB 2.0

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "oQLmBXZTb2WuFVWpaQ9-lK0NwRS4000r-2ZcP2nTSd1ZjHfyqNuDpBeQMFCZvu2CTy-d7joI04JlhvhC4UFlZA=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-01"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-01"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "3OGyY-3E5q00kV3Cz-Sa87iZDFcwUSmPi6lChwXVSTIlcXwSdn1yvCZk6cCqmCI3r_WS62_P7zzHRJjX9s8hEw=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-02"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-02"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "84DWTVYiJqDHmY6oba0tNg39l1rcW8-s10r0NiJQgkqzSDlyPbq0VpJaqVG8GuWb-dm6hqjv1c-Qj4UffGS8Aw=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-03"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-03"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "sY8e14tRyjsOc8niNtNDHf3wSeWXYgAAy7Oy8Ki8nLO3urv4vB3x73SvJOZkOeBKSV67QUoqGCf405KRCEuxww=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-04"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-04"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "6qgP2CVur5Y1ZBSaOa2fF-l-qq3-S7A3cnak-pkYCKcw6C816E9QO8M3XX8CsVEzcE60tJsWKNqib8mHfWwCqw=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-05"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-05"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "k1-4qPfSTd3IZaALGtMP35xI4S3wiUVCQReUbueYsMijWRNsauRE8lNbP2H2h1wzJdCYgqV2cMh2-E6EKXshJQ=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-06"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-06"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "YeQRWTdW5nsll9GaJUEbjv91JIKiR4mcoATNKa6bWpaMqLOe-LkGxYwObGrfkKyKSnSi9Ki21l6iJzHr54wrXw=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-07"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-07"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "LK1w-Hf5w6BUuKvcgvGX0aaBmdvulCPbEvEyItJyCFQqOMtjd33k8AIGgBiXpN_tXSQMIi6fi7rldcg6zBd_fA=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-08"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-08"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "211JjvK0FLz5DDzknrsLZBk7QTMZsYJ4_M1M4Kc4YB14xmoxD-img3PHfWGf1T2CN1h7sqq-uxbumB1MFY4JgQ=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-09"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-09"]

[[outputs.influxdb_v2]]
  ## URL
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "E69PAKCJFN1d_e9Y1rD5c0-33ZogWQndCASay2mrauHXjA_pE4P0Fi_IUMJNhHGw-B8tENDBTNE7fdEFQp96Rw=="
  ## Organization is the name of the organization you wish to write to.
  organization = "cust-group-10"
  ## Destination bucket to write into.
  bucket = "iot"
  ## Tag filtering
  [outputs.influxdb_v2.tagpass]
    customer = ["cust-group-10"]

###############################################################################
#                             INPUT PLUGINS                                   #
###############################################################################

# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]

  ## URL  
  servers = ["tcp://127.0.0.1:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "iot/+/+/+/+",
  ]

  ## If unset, a random client ID will be generated.
  client_id = "telegraf"

  ## Data format to consume.
  data_format = "json"

  ## Topic parsing
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "iot/+/+/+/+"
    measurement = "_/_/_/measurement/_"
    tags = "_/customer/site/serial/channel"
