#!/bin/bash

ENC_HDR=/dev/mmcblk0p3
ENC_DRIVE=/dev/mmcblk0p4
BOOT_DIR=/boot/firmware/eplayer
ENCRYPT_FLAG=$BOOT_DIR/.enc-encrypted
FORMAT_FLAG=$BOOT_DIR/.enc-formatted
COMMISSION_FLAG=$BOOT_DIR/.enc-commission
KEYFILE=/run/keyfile
ENC_NAME=enc_drive
ENC_PATH=/home/eplayer/$ENC_NAME

echo "Crypt-Commission: Key generation"
/bin/xkey

/bin/mkdir -p $BOOT_DIR
/bin/mkdir -p $ENC_PATH


if [ ! -f $FORMAT_FLAG ]; then

	echo "Crypt-Commission: First Time Format"
	/usr/sbin/mkfs.ext4 -F $ENC_DRIVE

	#If we format, we need to redo encryption
	rm -rf $ENCRYPT_FLAG
	
	/usr/bin/touch $FORMAT_FLAG
fi


# Only setup the encrypted drive once or of the flag is cleared
# Data on the drive is lost when prepared

if [ ! -f $ENCRYPT_FLAG ]; then

	echo "Crypt-Commission: Preparing Encryped Drive"
	cat $KEYFILE | /usr/sbin/cryptsetup-reencrypt --new --header=$ENC_HDR --type=luks2 -c xchacha12,aes-adiantum-plain64 -s 256 -h sha512 --use-urandom $ENC_DRIVE
	cat $KEYFILE | /usr/sbin/cryptsetup luksAddKey --header=$ENC_HDR $ENC_DRIVE $KEYFILE

	echo "Crypt-Commission: Opening Drive"
	/usr/sbin/cryptsetup luksOpen --header=$ENC_HDR $ENC_DRIVE $ENC_NAME --key-file=$KEYFILE

	/usr/bin/touch $ENCRYPT_FLAG
	# Force a "live partition" update
	echo "-1" > $BOOT_DIR/settings/.version

else
	echo "Crypt-Commission: Opening Drive"
	/usr/sbin/cryptsetup luksOpen --header=$ENC_HDR $ENC_DRIVE $ENC_NAME --key-file=$KEYFILE

fi

echo "Encrypted drive Check ..."
if [ -e /dev/mapper/$ENC_NAME ]; then
	echo "Encrypted drive OK"
else
	echo "Failed to open encrypted drive, formatting ..."
	rm -f $ENCRYPT_FLAG
	rm -f $FORMAT_FLAG
	reboot
fi

echo "Crypt-Commission: Disk Checking Repairing"
/usr/sbin/e2fsck -p /dev/mapper/$ENC_NAME

echo "Crypt-Commission: Mounting"
/usr/bin/mount /dev/mapper/$ENC_NAME $ENC_PATH
RET=$?
if [ $RET -ne 0 ]; then
	echo "Failed to mount encrypted drive, formatting ..."
	rm -f $ENCRYPT_FLAG
	rm -f $FORMAT_FLAG 
	reboot
fi

# Encrypt the commissioning data under /boot/firmware
if [ -d $BOOT_DIR/commission ]; then
	# Folder will overwrite previous encrypted version
	rm -rf $BOOT_DIR/commission.tar.gz.enc

	# Encrypt commissioning info
	cd $BOOT_DIR
	tar -cz commission | openssl enc -aes-256-cbc -pbkdf2 -e -k "$(cat $KEYFILE)" > commission.tar.gz.enc
	rm -rf $BOOT_DIR/commission
fi

# Make commissioning data available under /run
if [ -f $BOOT_DIR/commission.tar.gz.enc ]; then
	rm -rf /run/commission
	cat $BOOT_DIR/commission.tar.gz.enc | openssl enc -aes-256-cbc -pbkdf2 -d -k "$(cat $KEYFILE)" | tar xz -C /run
fi

# Make settings data available under /run
if [ -d $BOOT_DIR/settings ]; then
	cp -Rf $BOOT_DIR/settings /run
fi

# Did WIFI init OK?
if [ -e /sys/class/net/wlan0 ]; then
	echo "WIFI HW Initialized OK."
else
        echo "WIFI HW Initialization FAILED."

	WIFI_RETRY=5
	COUNT=0
	while [ $COUNT -lt $WIFI_RETRY ]; do

		echo "Unloading brcmfmac module"
		modprobe -r brcmfmac
		sleep 5
		echo "Loading brcmfmac module"
		modprobe brcmfmac
		sleep 5

		if [ -e /sys/class/net/wlan0 ]; then

			echo "WIFI HW Initialized OK."
			break
		fi

		COUNT=$((COUNT + 1))
	done
fi

# Install WIFI hotspots
if [ -f /run/settings/.wifi ]; then
	echo "Copying WIFI settings for Netplan"
	cp -f /run/settings/.wifi /etc/netplan/config.yaml
fi

echo "Apply WIFI settings for Netplan"
netplan generate
netplan apply

# Cleanup
rm -rf /run/commission
rm -rf $KEYFILE


