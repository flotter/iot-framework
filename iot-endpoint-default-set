#!/bin/bash -e

CPWD="$( cd "$(dirname "$0")" ; pwd -P )"

#----------------------------------------------------#
# COMMON ATTRIBUTES                                  #
#----------------------------------------------------#

source $CPWD/scripts/iot-utils

#----------------------------------------------------#
# DEFINES / MACROS                                   #
#----------------------------------------------------#

LOG=$LOGS_DIR/iot-endpoint-default-set.log

#----------------------------------------------------#
# CMDLINE OPTIONS                                    #
#----------------------------------------------------#

ARGC=$#
ARGV=("$@")

VERBOSE=false
HELP=false

# Clear args
set --

COUNT=0
while [ $COUNT -lt $ARGC ]; do
	STRIP=${ARGV[COUNT]}

	ID=0
	LONGFORMAT=`echo $STRIP | cut -b 1-2`
	if [ "x$LONGFORMAT" == "x--" ]; then
		STRIP=`echo ${ARGV[COUNT]} | cut -b 2-3`
	else
		ID=`echo $STRIP | cut -b 3-`
		STRIP=`echo $STRIP | cut -b 1-2`
	fi
	

	if [ "x$STRIP" == "x-v" ]; then
		VERBOSE=true
	elif [ "x$STRIP" == "x-h" ]; then
		HELP=true
	else
		pl
		pr "Error: Unknown argument"
		COUNT=$ARGC
		HELP=true
	fi
COUNT=$((COUNT+1))
done

log "Started"

pl
pg "iot-endpoint-default-set ($VERSION)"

if [ "$HELP" == "true" ]; then
        pl
	pn "Usage:"
	pl
        pn "Set the default endpoint for debugging."
        pl
	pn "iot-endpoint-default-set [-v] [-h] ..."
	pl
	pn "Help:"
	pl
	pn "-v (--verbose)     Verbose output for operations"
	pn "-h (--help)        Print this"
	pl
	exit 1
fi

#----------------------------------------------------#
# PREPARE                                            #
#----------------------------------------------------#

pn
pg ":: Setup & Checks ::"
pn

common_setup

log "Common Setup OK"

#----------------------------------------------------#
# BODY                                               #
#----------------------------------------------------#

pl
pg ":: Device Selection ::"
pl

DEVICE=$(device)

if [ -z "$DEVICE" ] || [ ! -d $IOT_DEVICE_DIR/$DEVICE ]; then

	if [ "x$ADMIN" == "x1" ]; then

		select_device
	else
		err "No default device is set. Without Admin mode we cannot proceed."
	fi
else
	# Default device (Non-admin mode compatible)
	pnn "- Device selected : "
	pg "$DEVICE"
fi

pl
pg ":: Domain Selection ::"
pl

DOMAIN=$(domain)

if [ -z "$DOMAIN" ] || [ ! -d $MASTER_DB/$DOMAIN ]; then

	if [ "x$ADMIN" == "x1" ]; then

		select_domain
	else
		err "No default domain is set. Without Admin mode we cannot proceed."
	fi
else
	# Single Default domain (Non-admin mode compatible)

        CUST=$(dirname $DOMAIN)
        SITE=$(basename $DOMAIN)
fi

pnn "- Domain selected : "
pg "$CUST/$SITE"

pl
pg ":: Set Default Endpoint ::"
pl

pn "An endpoint is a physical running board commissioned for a "
pn "specific domain (customer/site). If we are on the same"
pn "local network as the endpoint, we can debug the application"
pn "on that board directly. If your endpoint is not in the list, it"
pn "means that the device has not yet published a heartbeat"
pn "record on Amazon S3. Make sure the device is powered, and"
pn "the network configuration is valid."
pl

select_endpoint

pl
pg ":: Final Confirmation ::"
pl

pn "Set the following endpoint as the default:"

pl
pnn "Endpoint : "
pg "$ENDPOINT"
pl
pnn "Type 'ok' and Enter to continue : "
read SELECT

if [ "x$SELECT" != "xok" ]; then
	err "User aborted."
fi

pl
pg ":: Performing Actions ::"
pl

pnn "- Setting default endpoint : "
sed -i '/IOT_DEVICE/d' $TOOL_SETTINGS
echo "IOT_DEVICE=$DEVICE" >> $TOOL_SETTINGS
sed -i '/IOT_DOMAIN/d' $TOOL_SETTINGS
echo "IOT_DOMAIN=$CUST/$SITE" >> $TOOL_SETTINGS
sed -i '/IOT_ENDPOINT/d' $TOOL_SETTINGS
echo "IOT_ENDPOINT=$ENDPOINT" >> $TOOL_SETTINGS
pg "Done"

log "Default device set to $DEVICE"
log "Default domain set to $CUST/$SITE"
log "Default endpoint set to $ENDPOINT"

pl
